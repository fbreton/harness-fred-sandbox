pipeline:
  projectIdentifier: Fred_SandBox
  orgIdentifier: SE_Sandbox
  tags: {}
  stages:
    - stage:
        name: DeployQA
        identifier: DeployQA
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: paymentservice
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: Deploy
                      sources:
                        - identifier: Deploy
                          type: DockerRegistry
                          spec:
                            tag: <+input>
          environment:
            environmentRef: QAPayServ
            deployToAll: false
            infrastructureDefinitions:
              - identifier: QAGKE
          execution:
            steps:
              - step:
                  type: JiraCreate
                  name: Jira Create
                  identifier: JiraCreate
                  spec:
                    connectorRef: Fred_Jira
                    projectKey: HD
                    issueType: Story
                    fields:
                      - name: Description
                        value: Deployment to QA
                      - name: Summary
                        value: Ticket to track deployment of <+service.name>
                  timeout: 1d
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: StageRollback
              - step:
                  type: JiraUpdate
                  name: Jira Update QATest
                  identifier: JiraUpdate
                  spec:
                    connectorRef: Fred_Jira
                    issueKey: <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>
                    transitionTo:
                      transitionName: Ready For Testing
                      status: QA Test
                    fields:
                      - name: Description
                        value: In QA, waiting for Approval to go in Prod or rejection
                  timeout: 1d
            rollbackSteps:
              - step:
                  type: JiraUpdate
                  name: Jira Update failed
                  identifier: Jira_Update_falied
                  spec:
                    connectorRef: Fred_Jira
                    issueKey: " <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>"
                    transitionTo:
                      transitionName: Rejected
                      status: Rejected
                    fields:
                      - name: Summary
                        value: Deployment to QA failed
                  timeout: 1d
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - parallel:
        - stage:
            name: PenTest
            identifier: PenTest
            type: SecurityTests
            spec:
              cloneCodebase: false
              execution:
                steps:
                  - step:
                      type: Zap
                      name: Zap
                      identifier: Zap
                      spec:
                        mode: orchestration
                        config: attack
                        target:
                          name: Pentesting
                          type: instance
                          variant: <+pipeline.stages.DeployQA.spec.artifacts.primary.tag>
                        advanced:
                          log:
                            level: info
                        instance:
                          domain: bank-qa.cie-demo.co.uk
                          protocol: http
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: fredgkecluster
                  namespace: payment-service-build
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
        - stage:
            name: SecScan
            identifier: SecScan
            type: SecurityTests
            spec:
              cloneCodebase: false
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: fredgkecluster
                  namespace: payment-service-build
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Background
                      name: DinD
                      identifier: DinD
                      spec:
                        connectorRef: FredDockerRegistry
                        image: docker:dind
                        shell: Sh
                        privileged: true
                        entrypoint:
                          - dockerd-entrypoint.sh
                        imagePullPolicy: IfNotPresent
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy
                      identifier: AquaTrivy
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          name: SecScan
                          type: container
                          variant: <+pipeline.stages.DeployQA.spec.artifacts.primary.tag>
                        advanced:
                          log:
                            level: info
                        resources:
                          limits:
                            memory: 2G
                            cpu: "1"
                        privileged: true
                        image:
                          type: docker_v2
                          name: <+pipeline.stages.DeployQA.spec.artifacts.primary.imagePath>
                          tag: <+pipeline.stages.DeployQA.spec.artifacts.primary.tag>
              sharedPaths:
                - /var/run/
    - stage:
        name: Approval
        identifier: Jira_Approve
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  type: JiraApproval
                  name: Jira Approval
                  identifier: JiraApproval
                  spec:
                    connectorRef: Fred_Jira
                    projectKey: HD
                    issueType: Story
                    issueKey: <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: Approved
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: Rejected
                  timeout: 1d
        tags: {}
    - parallel:
        - stage:
            name: RemoveQA
            identifier: removeqa
            description: ""
            type: Deployment
            spec:
              deploymentType: Kubernetes
              service:
                useFromStage:
                  stage: DeployQA
              environment:
                environmentRef: QAPayServ
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: QAGKE
              execution:
                steps:
                  - step:
                      type: K8sDelete
                      name: RemoveQA
                      identifier: RemoveQA
                      spec:
                        deleteResources:
                          type: ReleaseName
                          spec:
                            deleteNamespace: false
                      timeout: 10m
                      failureStrategies: []
                rollbackSteps: []
            tags: {}
            failureStrategies:
              - onFailure:
                  errors:
                    - AllErrors
                  action:
                    type: StageRollback
            when:
              pipelineStatus: All
        - stage:
            name: DeployProd
            identifier: DeployProd
            description: ""
            type: Deployment
            spec:
              deploymentType: Kubernetes
              service:
                useFromStage:
                  stage: DeployQA
              environment:
                environmentRef: PRODPayserv
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: PRODGKE
              execution:
                steps:
                  - step:
                      type: JiraUpdate
                      name: Jira Update InProgress
                      identifier: Jira_Update_1
                      spec:
                        connectorRef: Fred_Jira
                        issueKey: " <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>"
                        transitionTo:
                          transitionName: In Progress
                          status: In Progress
                        fields:
                          - name: Description
                            value: Deploying in Production
                      timeout: 1d
                  - step:
                      type: K8sCanaryDeploy
                      name: Canary Deployment_1
                      identifier: CanaryDeployment_1
                      spec:
                        skipDryRun: false
                        instanceSelection:
                          spec:
                            percentage: 50
                          type: Percentage
                      timeout: 10m
                  - step:
                      type: Verify
                      name: verify_dev
                      identifier: verify_dev
                      spec:
                        type: Canary
                        monitoredService:
                          type: Default
                          spec: {}
                        spec:
                          sensitivity: LOW
                          duration: 5m
                          deploymentTag: <+serviceConfig.artifacts.primary.tag>
                      timeout: 2h
                      failureStrategies:
                        - onFailure:
                            errors:
                              - Verification
                            action:
                              type: ManualIntervention
                              spec:
                                timeout: 2h
                                onTimeout:
                                  action:
                                    type: StageRollback
                        - onFailure:
                            errors:
                              - Unknown
                            action:
                              type: ManualIntervention
                              spec:
                                timeout: 2h
                                onTimeout:
                                  action:
                                    type: Ignore
                  - step:
                      type: K8sRollingDeploy
                      name: Rolling Deployment
                      identifier: RollingDeployment
                      spec:
                        skipDryRun: false
                        pruningEnabled: false
                      timeout: 10m
                      failureStrategies: []
                  - step:
                      type: K8sCanaryDelete
                      name: Canary Delete_1
                      identifier: CanaryDelete_1
                      spec: {}
                      timeout: 10m
                  - step:
                      type: JiraUpdate
                      name: Jira Update Done
                      identifier: Jira_Update_2
                      spec:
                        connectorRef: Fred_Jira
                        issueKey: " <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>"
                        transitionTo:
                          transitionName: Done
                          status: Done
                        fields: []
                      timeout: 1d
                rollbackSteps:
                  - step:
                      type: JiraUpdate
                      name: Jira Update Canceled
                      identifier: JiraUpdate
                      spec:
                        connectorRef: Fred_Jira
                        issueKey: " <+pipeline.stages.DeployQA.spec.execution.steps.JiraCreate.issue.key>"
                        transitionTo:
                          transitionName: Invalid
                          status: Invalid
                        fields:
                          - name: Summary
                            value: Deployment to Prod failed
                      timeout: 1d
                  - step:
                      type: K8sCanaryDelete
                      name: Canary Delete_2
                      identifier: CanaryDelete_2
                      spec: {}
                      timeout: 10m
            tags: {}
            failureStrategies:
              - onFailure:
                  errors:
                    - AllErrors
                  action:
                    type: StageRollback
  allowStageExecutions: true
  identifier: payment_service_CD
  name: payment service CD
